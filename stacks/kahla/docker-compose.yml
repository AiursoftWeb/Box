version: '3.3'

services:
  app:
    image: hub.aiursoft.cn/aiursoft/kahla.app
    networks:
      - proxy_app
    deploy:
      labels:
        swarmpit.service.deployment.autoredeploy: 'true'

  server:
    image: hub.aiursoft.cn/aiursoft/kahla
    volumes:
      - kahla-data:/data
    environment:
        ConnectionStrings__DefaultConnection: Server=db;Database=kahla;Uid=kahla;Pwd=<kahla_password>;
        ConnectionStrings__InfluxDB: http://influx:8086;influx_user;influx_password;kahla;messages
    networks:
      - proxy_app
      - kahla_app
    deploy:
      labels:
        swarmpit.service.deployment.autoredeploy: 'true'

  # For local development, you can use the following command to start a mysql container.
  #sudo docker run -d --name db -e MYSQL_RANDOM_ROOT_PASSWORD=true -e MYSQL_DATABASE=kahla -e MYSQL_USER=kahla -e MYSQL_PASSWORD=kahla_password -p 3306:3306 hub.aiursoft.cn/mysql
  db:
    image: hub.aiursoft.cn/mysql
    volumes:
      - kahla-db:/var/lib/mysql
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=true
      - MYSQL_DATABASE=kahla
      - MYSQL_USER=kahla
      - MYSQL_PASSWORD=<kahla_password>
    networks:
      - kahla_app
    deploy:
      labels:
        swarmpit.service.deployment.autoredeploy: 'true'

  # For local development, you can use the following command to start a influx container. 
  #sudo docker run -d --name influx -e DOCKER_INFLUXDB_INIT_MODE=setup -e DOCKER_INFLUXDB_INIT_USERNAME=influx_user -e DOCKER_INFLUXDB_INIT_PASSWORD=influx_password -e DOCKER_INFLUXDB_INIT_ORG=kahla -e DOCKER_INFLUXDB_INIT_BUCKET=messages -p 8086:8086 hub.aiursoft.cn/influxdb
  influx:
    image: hub.aiursoft.cn/influxdb
    volumes:
      - influx-data:/var/lib/influxdb
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=influx_user
      - DOCKER_INFLUXDB_INIT_PASSWORD=influx_password
      - DOCKER_INFLUXDB_INIT_ORG=kahla
      - DOCKER_INFLUXDB_INIT_BUCKET=messages
    networks:
      - kahla_app
    deploy:
      labels:
        swarmpit.service.deployment.autoredeploy: 'true'

volumes:
  kahla-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /swarm-vol/kahla-data
  kahla-db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /swarm-vol/kahla-db
  influx-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /swarm-vol/influx-data

networks:
  proxy_app:
    external: true
  kahla_app:
    driver: overlay
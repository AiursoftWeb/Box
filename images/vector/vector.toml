############################################
# 1) Source: 从 Caddy 日志文件读取，每行都是 JSON
[sources.caddy]
type = "file"
include = ["/data/caddy/logs/web.log"]
fingerprint.strategy = "device_and_inode"

############################################
# 2) Transform: Remap Language 解析 JSON
[transforms.parse]
type   = "remap"
inputs = ["caddy"]
source = '''
structured = parse_json!(.message)

. = {
  ts:           structured.ts,
  level:        structured.level,
  logger:       structured.logger,
  msg:          structured.msg,
  remote_ip:    structured.request.remote_ip,
  remote_port:  to_int!(structured.request.remote_port),
  method:       structured.request.method,
  host:         structured.request.host,
  uri:          structured.request.uri,
  status:       to_int!(structured.status),
  duration_ms:  to_float!(structured.duration) * 1000.0,
  bytes_sent:   to_int!(structured.size),
  user_agent:   to_string!(structured.request.headers."User-Agent"[0]),
  err_id:       to_string!(structured.err_id),
  err_trace:    to_string!(structured.err_trace)
}

del(.message)
'''


############################################
# 3) Sink: 写入 ClickHouse
[sinks.clickhouse]
type            = "clickhouse"
inputs          = ["parse"]
endpoint        = "http://clickhouse:8123"
compression     = "gzip"
database        = "logs"
table           = "caddy_requests"

# Basic auth 跟你 docker-compose 里 CLICKHOUSE_USER/PASSWORD 保持一致
auth.strategy   = "basic"
auth.user       = "default"
auth.password   = "123456"
skip_unknown_fields  = true
batch.max_events = 1000

# —— 把 timeout_secs 移到 request 子表 —— 
[sinks.clickhouse.request]
timeout_secs = 30
